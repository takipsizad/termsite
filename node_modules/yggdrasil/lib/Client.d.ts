declare const Client: {
    /**
     * Attempts to authenticate a user.
     * @param  {Object}   options Config object
     * @param  {Function} cb      Callback
     */
    auth: (options: {
        agent?: string;
        user: string;
        pass: string;
        token?: string;
        version: string;
        requestUser?: boolean;
    }) => Promise<any>;
    /**
     * Refreshes a accessToken.
     * @param  {String}   accessToken Old Access Token
     * @param  {String}   clientToken Client Token
     * @param  {String=false}   requestUser Whether to request the user object
     * @param  {Function} cb     (err, new token, full response body)
     */
    refresh: (accessToken: string, clientToken: string, requestUser?: boolean | undefined) => Promise<any[]>;
    /**
     * Validates an access token
     * @param  {String}   accessToken Token to validate
     * @param  {Function} cb    (error)
     */
    validate: (accessToken: string) => Promise<any>;
    /**
     * Invalidates all access tokens.
     * @param  {String}   username User's user
     * @param  {String}   password User's pass
     * @param  {Function} cb   (error)
     */
    signout: (username: string, password: string) => Promise<any>;
};
export = Client;
